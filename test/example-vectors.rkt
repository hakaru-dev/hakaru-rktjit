#lang racket
(provide (all-defined-out))
(define small99
    (vector-immutable
     0.014228  0.003821  0.030999
     0.024379  0.001317  0.002707
     0.013426  0.000219  0.008970
     0.012040  0.003862  0.006986
     0.012392  0.004347  0.003219
     0.011661  0.006158  0.011185
     0.060091  0.008681  0.000573
     0.019064  0.010391  0.005424
     0.022017  0.015388  0.001420
     0.023657  0.007121  0.003429
     0.004026  0.005844  0.003225
     0.045181  0.006403  0.018045
     0.006239  0.008657  0.000347
     0.002385  0.000023  0.005600
     0.032088  0.005185  0.014991
     0.003511  0.001131  0.004627
     0.002341  0.013252  0.016136
     0.017101  0.003137  0.003582
     0.000282  0.000733  0.018463
     0.004997  0.000185  0.029280
     0.005629  0.018106  0.016644
     0.013107  0.002684  0.019586
     0.004801  0.020799  0.008960
     0.013165  0.000553  0.000053
     0.001443  0.000540  0.008137
     0.005964  0.004829  0.005559
     0.004122  0.000518  0.018653
     0.022602  0.007208  0.007697
     0.037427  0.002005  0.002432
     0.012954  0.000968  0.001409
     0.005069  0.019474  0.015708
     0.001842  0.009659  0.009836
     0.010813  0.029945  0.000568))
(define med99 (vector-map (curry * 100) small99))
(define big99 (vector-map (curry * 10000) small99))

(define (random-fl-vector s (factor 1))
  (build-vector s (λ (a) (* factor (random)))))
(define (rand-small99) (random-fl-vector 99 0.01))
(define (rand-med99)  (random-fl-vector 99 10))
(define (rand-big99)  (random-fl-vector 99 100))

(define smalli99
  '#(21 79 57 18 58 5 89 36 19 6 34 61 25 7 73 33
        76 48 43 28 77 12 89 93 93 9 9 61 77 28 53 44
        42 30 93 39 91 35 87 80 79 47 14 38 76 47 67 30 48
        2 85 56 57 32 10 2 32 88 45 21 91 98 99 28 86 15
        23 70 23 20 64 38 29 59 99 17 44 61 46 80 9 98 77
        87 28 10 93 27 52 7 11 41 62 84 36 41 37 52 58))
(define medi99
  '#(6110 5613 1768 6626 3868 4397 9933 5605 9865 1110 3438 4874 5167 2854 4563
          7459 3965 1902 5712 9491 2894 414 9514 7243 613 1552 7161 7980 9225
          2681 4535 5943 1620 1831 5248 2060 4802 3679 4218 1081 3636 3496 1761
          3024 9323 8810 8224 9171 2576 1829 5046 5546 3080 6598 9526 1142 6402
          8861 9138 1335 74 7303 4447 291 276 5709 5198 2969 9143 1628 4412 7410
          5913 7233 9394 590 3617 789 1541 6482 8032 6846 3385 3038 2371 2475
          5440 6913 485 5800 5525 9240 9742 2648 6894 5560 4639 6233 5452))
(define bigi99
  '#(783119 709062 498067 34878 583724 331218 300938 856427 773094 485184 428301
            816385 641700 493775 719909 181505 18399 235638 538039 217258 147869
            240156 615865 563385 850500 723598 448180 617884 680612 165914
            426656 411064 46839 619313 243469 580215 119313 434630 800176 254812
            582513 180552 157356 409941 537593 593787 386822 633202 935245
            430877 263481 177888 849478 606364 408366 383656 774066 507902
            999909 900488 230997 826622 544201 172902 161063 984909 943726
            98179 311664 520027 660874 262268 948244 106371 7264 942240 607168
            92561 550211 992428 378772 648441 547035 200153 137203 947291 70531
            87595 785587 64655 490135 54791 859009 280329 920531 34403 851854
            597346 426305))
(define (random-i-vector s (factor 1))
  (build-vector s (compose truncate inexact->exact (λ (a) (* factor (random))))))
(define (rand-smalli99)
  (random-i-vector 99 10))
(define (rand-medi99)
  (random-i-vector 99 1000))
(define (rand-bigi99)
  (random-i-vector 99 100000))
