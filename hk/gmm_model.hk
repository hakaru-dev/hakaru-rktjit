def dirichlet(as array(prob)):
    xs <~ plate i of int2nat(size(as)-1):
            beta(summate j from i+1 to size(as): as[j],
                 as[i])
    return array i of size(as):
             x = product j from 0 to i: xs[j]
             x * if i+1==size(as): 1 else: real2prob(1-xs[i])

fn as array(prob):
fn n nat:
    theta <~ dirichlet(as)
    phi <~ plate k of size(as): normal(0,1)
    z <~ plate i of n: categorical(theta)
    t <~ plate i of n: normal(phi[z[i]],1)
    return (t, z)
